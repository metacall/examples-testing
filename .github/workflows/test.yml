name: MetaCall Examples CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:  
  Linux_cli:
    name: Linux - Ubuntu Run | CLI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install MetaCall
        run: |
          sudo apt update
          curl -sL https://raw.githubusercontent.com/metacall/install/master/install.sh | sh

      - name: Verify MetaCall installation
        run: | 
          metacall
          
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run Tests Suits
        run: |
          find test-suites -type f -name "*.yaml" -exec python ./testing.py -f {} -V -e cli \;

  Linux_faas:
    name: Linux - Ubuntu Run | FaaS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      
      - name: Install MetaCall Deploy
        run: |
          npm i -g @metacall/deploy
      - name: Verify MetaCall Deploy installation
        run: | 
          metacall-deploy --version
          
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Start FaaS Container in Background
        run: |
          docker run -d -p 9000:9000 --name faas_container metacall/faas

      - name: Run Tests Suits
        run: |
          python ./testing.py -f test-suites/test-time-app-web.yaml -V -e faas;

  Windows_cli:
    name: Windows Run | cli
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
  
      - name: Install MetaCall
        shell: powershell
        run: |
          powershell -NoProfile -ExecutionPolicy unrestricted -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; &([scriptblock]::Create((Invoke-WebRequest -UseBasicParsing 'https://raw.githubusercontent.com/metacall/install/master/install.ps1')))"
            
      - name: Add MetaCall to PATH
        run: | 
          echo C:\Users\runneradmin\AppData\Local\MetaCall >> $env:GITHUB_PATH
        shell: powershell
        
      - name: Verify MetaCall installation
        shell: powershell
        run: | 
          metacall.bat

      - name: Install Dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Test Suits
        shell: bash
        run: |
          find test-suites -type f -name "*.yaml" -exec python ./testing.py -f {} -V -e cli \;
    
  Windows_faas:
    name: Windows Run | faas
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install MetaCall Deploy
        run: |
          npm i -g @metacall/deploy
      - name: Verify MetaCall Deploy installation
        run: | 
          metacall-deploy --version

      - name: Install Dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start FaaS Container in Background
        run: |
          docker run -d -p 9000:9000 --name faas_container metacall/faas

      - name: Run Test Suits
        shell: bash
        run: |
          find test-suites -type f -name "*.yaml" -exec python ./testing.py -f {} -V -e faas \;
             